{"['float_1']": ["float_1 is a negative number", "float_1 is greater than 1", "float_1 is a negative floating-point number", "float_1 has a positive non-zero value"], "['scalar_1']": ["A complex number", "A negative number", "A null value", "Zero"], "['tensor_1']": ["A tensor with 3 dimensions, each dimension of size greater than 1", "tensor_1 is a numpy array, not a tensor", "tensor_1 is a tensor on a cuda device", "a string tensor", "A zero-dimensional tensor (scalar)", "A 1-dimensional tensor (vector)", "An empty tensor", "A tensor with negative values", "A tensor with two dimensions where the last dimension is greater than the second-to-last dimension (e.g., shape [1, 2])", "tensor_1 is a tensor of dimension 3", "A tensor with 1 dimension of size 6", "An MKLDNN tensor", "A complex tensor", "A sparse tensor", "A conjugate view tensor", "A tensor with the negative bit set", "A tensor that has been allocated on a CUDA (GPU) device.", "A tensor that contains other tensors, creating a nested structure.", "tensor_1 is on a different device than the input device and has a different dtype", "tensor_1 is on a different device than the input tensor", "tensor_1 is undefined", "tensor_1 has a different number of bytes than the destination buffer", "A 1-dimensional empty tensor", "tensor_1 is defined as null", "A 1d tensor with dimension 3", "A 2D tensor on a CPU backend", "A tensor with a shape of (1) and a total size of 1", "A tensor with a shape of (1, 1, 1, 1, 1) and a total size of 1", "A tensor with 5 dimensions", "A tensor with 3 dimensions", "tensor_1 is an undefined or None value", "tensor_1 is a contiguous tensor", "2d tensor with shape (2, 2)", "A tensor with more values than sample points", "A real-valued tensor", "A non-nested dense tensor in a standard 2D array format", "A dense tensor in a COO (coordinate list) format", "A tensor with shape (15, 15, 15) which has both a trailing dimension and total number of elements not divisible by 16", "A tensor that is already quantized", "A tensor that is in floating-point format", "A sparse tensor with uncoalesced values that is also not properly formatted as an input", "A tensor with a standard dense layout"], "['list_1']": ["list_1 is None, which means it has no value", "list_1 has a length of 7 which is not divisible by 2, not even, and not a multiple of 3, 4, or 5", "list_1 with an odd number of elements", "list_1 has a size of 1", "A list with 5 elements", "An empty list", "list_1 is a list of two integers", "list_1 with no integers", "A list with identical first and second elements", "1d list"], "['tensor_1', 'tensor_2']": ["tensor_1 is on CPU and tensor_2 is on GPU", "tensor_1 is a float32 tensor, tensor_2 is an int32 tensor", "tensor_1 is an integer tensor, tensor_2 is a float tensor", "tensor_1 is a float tensor, tensor_2 is undefined", "tensor_1 is a 2x3 matrix, tensor_2 is a vector of length 3", "tensor_1 is a 2x3 matrix, tensor_2 is a 2x2 matrix", "tensor_1 is a 2x3 matrix, tensor_2 is a 4x6 matrix", "tensor_1 is a 1x2 tensor, tensor_2 is a 3x3 tensor", "tensor_1 is a 0-dimensional tensor, tensor_2 is a 1x3 tensor", "tensor_1 is a 2x3 tensor, tensor_2 is a 3x2 tensor", "tensor_1 is a 2x2 tensor, tensor_2 is a 4x1 tensor", "tensor_1 is a contiguous 2x3 tensor, tensor_2 is a non-contiguous 2x3 tensor obtained by transposing a 3x2 tensor", "tensor_1 is a 3D tensor of size 2x2x2, tensor_2 is a 2D tensor of size 4x2", "tensor_1 is a 2x2 dense tensor, tensor_2 is a 3x3 dense tensor", "tensor_1 is a 2x2 dense tensor with 1 sparse dimension, tensor_2 is a 2x2 dense tensor with 2 sparse dimensions", "tensor_1 is a 2x2 tensor with a strided layout, tensor_2 is a 2x2 tensor with a packed layout", "tensor_1 has shape [3, 3], tensor_2 has shape [3, 3]", "tensor_1 is a 2x2 tensor and tensor_2 is a 3x3 tensor", "tensor_1 is a complex tensor, tensor_2 is a non-complex tensor", "tensor_1 is a quantized tensor, tensor_2 is a non-quantized tensor", "tensor_1 is a dense tensor, tensor_2 is a sparse tensor", "tensor_1 and tensor_2 have different quantization schemes", "tensor_1 is a complex64 tensor, tensor_2 is a float32 tensor, self is a float32 tensor", "tensor_1 is a float tensor, tensor_2 is an integer quantized tensor", "tensor_1 is a 1d tensor with multiple elements, tensor_2 is a 0d tensor (scalar)", "tensor_1 and tensor_2 have different number of batches and different batch sizes", "tensor_1 is a 3D tensor with size (2, 3, 4), and tensor_2 is a 3D tensor with size (2, 5, 4).", "tensor_1 is a 2D tensor with size (3, 4), and tensor_2 is a 2D tensor with size (5, 6).", "tensor_1 is a 1D tensor with size (3), and tensor_2 is a 2D tensor with size (4, 2).", "tensor_1 and tensor_2 have more than 4 dimensions", "tensor_1 has a larger last dimension than tensor_2", "tensor_1's last dimension is smaller than tensor_2's last dimension", "Both tensors are in a non-mkldnn layout"], "['scalar_1', 'tensor_1']": ["A scalar value that does not match the number of dimensions of the tensor"], "['int_1']": ["int_1 is a negative integer", "int_1 refers to a data type of int", "int_1 is less than 0 and also less than negative of the number of dimensions", "int_1 is an integer that is not 2 or 4"], "['int_1', 'int_2']": ["Both integers are negative, int_1 is less than int_2", "int_1 is positive and greater than int_2 which is negative"], "['bool_1', 'tensor_1']": ["tensor_1 is an empty tensor, bool_1 is false", "tensor_1 is a non-empty 2d tensor, bool_1 is a string", "tensor_1 is a non-empty 4d tensor with size 0, bool_1 is true", "tensor_1 is a non-empty 2d tensor, bool_1 is true but the number of offset is 0"], "['int_1', 'int_2', 'int_3']": ["All integers are less than zero", "int_1 is not between int_2 and int_3, but all are greater than zero"], "['int_1', 'int_2', 'int_3', 'int_4', 'int_5', 'int_6', 'int_7', 'int_8', 'int_9']": ["(int_1: 10, int_2: 7, int_3: 4, int_4: 9, int_5: 6, int_6: 3, int_7: 8, int_8: 5, int_9: 2)"], "['int_1', 'tensor_1']": ["int_1 is negative and tensor_1 has two dimensions", "int_1 is greater than the number of dimensions of tensor_1, and tensor_1 has three dimensions", "int_1 is less than the maximum value in tensor_1, and tensor_1 contains values 1, 2, 3", "int_1 is equal to the number of dimensions of tensor_1, and tensor_1 is not contiguous", "tensor_1 is not contiguous, and int_1 is greater than 1", "int_1 is 4, tensor_1 is of shape (3, 2, 5)"], "['bool_1']": ["bool_1 is null", "bool_1 is an array of booleans", "bool_1 is defined and false"], "['str_1']": ["str_1 is an empty string"], "['list_1', 'tensor_1']": ["list_1 is a string, tensor_1 is a 2d array", "list_1 is a list of size 3, tensor_1 is a 4d tensor with the last dimension greater than the last element of list_1", "list_1 is a list of size 1, tensor_1 is a 3d tensor"], "['scalar_1', 'scalar_2']": ["Both scalar_1 and scalar_2 are None"], "['tensor_1', 'tensor_2', 'tensor_3']": ["tensor_1 is a 1d tensor with 4 elements, tensor_2 is a 2d tensor with shape (3, 4), tensor_3 is a 3d tensor with shape (2, 2, 2)", "tensor_1 is a 1-dimensional contiguous tensor, tensor_2 is a 2-dimensional non-contiguous tensor, tensor_3 is a 3-dimensional contiguous tensor", "tensor_1 is a 2-dimensional contiguous tensor, tensor_2 is a 1-dimensional contiguous tensor, tensor_3 is a 2-dimensional non-contiguous tensor", "tensor_1 is a 3-dimensional non-contiguous tensor, tensor_2 is a 3-dimensional contiguous tensor, tensor_3 is a 1-dimensional contiguous tensor", "tensor_1 is on CPU, tensor_2 is on GPU, and tensor_3 is on TPU", "tensor_1 is of dtype int32, tensor_2 is of dtype float64, tensor_3 is of dtype int64"], "['bool_1', 'list_1']": ["bool_1 is an integer, list_1 is a string"], "['int_1', 'tensor_1', 'tensor_2']": ["int_1 is 0, tensor_1 has a shape of (2, 3), tensor_2 has a shape of (4, 5)"], "['int_1', 'int_2', 'tensor_1']": ["int_1 is negative, int_2 refers to an existing dimension, tensor_1 is a valid tensor with at least one dimension", "int_1 is greater than the size of the dimension specified by int_2, int_2 refers to an existing dimension, tensor_1 is a valid tensor with specified dimension size less than int_1", "int_1 is within the valid range, int_2 refers to a dimension that does not exist in tensor_1, tensor_1 is a valid tensor with fewer dimensions than int_2"]}